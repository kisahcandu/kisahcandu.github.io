name: Generate & Deploy Jekyll Blog

on:
  workflow_dispatch: # Mengizinkan trigger manual dari UI GitHub Actions
  schedule:
    - cron: '0 0 * * *' # Aktifkan ini untuk jadwal harian (setiap hari jam 00:00 UTC)
  push:
     branches: gh-pages
  #     - main # Anda tidak perlu memicu dari push ke main jika _posts tidak di-commit di sana

jobs:
  generate_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # --- Langkah Python untuk Menghasilkan Konten ---

      - name: Create empty published_posts.json if it doesn't exist
        # Ini penting agar skrip Python tidak error jika file belum ada
        run: touch published_posts.json

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          pip install -r requirements.txt

      - name: Run Python script to generate Jekyll posts
        # Skrip Python Anda akan menulis file Markdown ke folder _posts/
        # Folder ini akan ada di lingkungan Actions, tapi tidak di repositori utama Anda
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          WORDPRESS_BLOG_ID: ${{ secrets.WORDPRESS_BLOG_ID }}
        run: |
          python pentil_payudara.py
          echo "Python script finished. Files generated in _posts/ directory (local to runner)."

      # --- Langkah Build Jekyll ---

      - name: Setup Ruby and Jekyll
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2' # Sesuaikan dengan versi Ruby yang dibutuhkan Jekyll Anda
          bundler-cache: true # Menginstall dependensi Gemfile secara otomatis

      - name: Build Jekyll Site
        run: |
          # Perintah ini akan membaca folder _posts/ yang dihasilkan Python
          # dan membangun situs ke folder _site/
          bundle exec jekyll build
          echo "Jekyll build completed. Site generated in _site/ directory."

      # --- Langkah Deployment GitHub Pages ---

      - name: Deploy to GitHub Pages
        # Action ini akan mengunggah isi dari _site/ ke branch gh-pages
        # yang akan disajikan oleh GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./_site # Folder yang berisi hasil build Jekyll
          publish_branch: gh-pages # Branch tujuan untuk deployment GitHub Pages
          # opsional, jika Anda ingin menyertakan riwayat commit yang bersih di gh-pages
          # force_orphan: true

      # --- Langkah Komit Opsional untuk published_posts.json ---
      # Anda bisa memilih untuk meng-commit published_posts.json atau tidak.
      # Jika Anda ingin tetap melacak ID postingan yang sudah diterbitkan di repo utama,
      # maka tetap komit file ini. Jika Anda ingin ini juga 'tersembunyi' dari repo utama,
      # maka hapus langkah ini dan tambahkan published_posts.json ke .gitignore.
      - name: Commit and push published_posts.json (optional)
        if: success() # Hanya dijalankan jika langkah sebelumnya berhasil
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "actions@github.com"
          git add published_posts.json
          git commit -m "Update published posts state file from CI" || true # '|| true' agar tidak gagal jika tidak ada perubahan
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
